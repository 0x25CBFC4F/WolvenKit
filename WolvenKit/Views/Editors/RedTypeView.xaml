<reactiveUi:ReactiveUserControl
    x:TypeArguments="documents:ChunkViewModel"
    x:Class="WolvenKit.Views.Editors.RedTypeView"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=documents:ChunkViewModel}"
    d:DesignHeight="450" d:DesignWidth="800">
        <Grid Background="{StaticResource ContentBackground}">
            <Grid.Resources>
            <sys:Double x:Key="RowHeight">26</sys:Double>
            <converters:RedEditorTemplateSelector x:Key="redEditorTemplates">
                    <converters:RedEditorTemplateSelector.RedStringEditor>
                        <DataTemplate>
                            <editors:RedStringEditor RedString="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedStringEditor>
                    <converters:RedEditorTemplateSelector.RedUlongEditor>
                        <DataTemplate>
                            <editors:RedUlongEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedUlongEditor>
                    <converters:RedEditorTemplateSelector.RedColorEditor>
                        <DataTemplate>
                        <editors:RedColorEditor RedColor="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedColorEditor>
                    <converters:RedEditorTemplateSelector.RedCurveEditor>
                        <DataTemplate>
                        <editors:RedCurveEditor RedCurve="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedCurveEditor>
                    <converters:RedEditorTemplateSelector.RedRefEditor>
                        <DataTemplate>
                        <editors:RedRefEditor RedRef="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedRefEditor>
                    <converters:RedEditorTemplateSelector.HandleTemplateView>
                    <DataTemplate>
                        <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Margin="5,0"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.HandleTemplateView>
                <converters:RedEditorTemplateSelector.EnumTemplateView>
                    <DataTemplate>
                        <templates:EnumTemplateView RedEnum="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.EnumTemplateView>
                <converters:RedEditorTemplateSelector.RedBoolEditor>
                    <DataTemplate>
                        <editors:RedBoolEditor RedBool="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedBoolEditor>
                <converters:RedEditorTemplateSelector.RedVector3Editor>
                    <DataTemplate>
                        <editors:RedVector3Editor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector3Editor>
                <converters:RedEditorTemplateSelector.RedWorldPositionEditor>
                    <DataTemplate>
                        <editors:RedWorldPositionEditor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedWorldPositionEditor>
                <converters:RedEditorTemplateSelector.RedVector4Editor>
                    <DataTemplate>
                        <editors:RedVector4Editor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}" W="{Binding Data.W, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector4Editor>
                <converters:RedEditorTemplateSelector.RedQuaternionEditor>
                    <DataTemplate>
                        <editors:RedQuaternionEditor I="{Binding Data.I, Mode=TwoWay}" J="{Binding Data.J, Mode=TwoWay}" K="{Binding Data.K, Mode=TwoWay}" R="{Binding Data.R, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedQuaternionEditor>
                <converters:RedEditorTemplateSelector.RedIntegerEditor>
                    <DataTemplate>
                        <editors:RedIntegerEditor RedInteger="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedIntegerEditor>
                <converters:RedEditorTemplateSelector.RedFixedPointEditor>
                    <DataTemplate>
                        <editors:RedFixedPointEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFixedPointEditor>
                <converters:RedEditorTemplateSelector.RedFloatEditor>
                    <DataTemplate>
                        <editors:RedFloatEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFloatEditor>
                <converters:RedEditorTemplateSelector.RedTypeViewer>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Margin="5,0"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedTypeViewer>
                    <converters:RedEditorTemplateSelector.RedArrayEditor>
                        <DataTemplate>
                        <ItemsControl ItemsSource="{Binding Properties}" Grid.Column="2" AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="TopLine" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderAlt}" MinHeight="{DynamicResource RowHeight}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="120" />
                                                <ColumnDefinition Width="1"  />
                                                <ColumnDefinition Width="6*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Name}" ToolTip="{Binding XPath}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Margin="5,0"/>
                                            <GridSplitter Grid.Column="1" Background="{StaticResource BorderAlt}" />
                                            <ContentControl Grid.Column="2" ToolTip="{Binding Type}" ContentTemplateSelector="{DynamicResource redEditorTemplates}" Content="{Binding}" />
                                        </Grid>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter TargetName="TopLine" Property="BorderThickness" Value="0"/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedArrayEditor>
            </converters:RedEditorTemplateSelector>
            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource WPFComboBoxStyle}">
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt3}"/>
            </Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
                <Setter Property="Margin" Value="4,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{StaticResource ContentBackgroundAlt3}"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="0,0,0,1">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding XPath}" VerticalAlignment="Center" FontWeight="Bold"/>
                <TextBlock Text="{Binding Type, StringFormat=' redtype: {0}'}" Grid.Column="1" VerticalAlignment="Center" Foreground="#666666"/>
            </Grid>
        </Border>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="0" Grid.Row="1">
            <ItemsControl ItemsSource="{Binding Properties}" Grid.Column="2" AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="0,0,0,1" Height="Auto" VerticalAlignment="Top">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="TopLine" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderAlt}" MinHeight="{DynamicResource RowHeight}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition>
                                        <ColumnDefinition.Style>
                                            <Style TargetType="ColumnDefinition">
                                                <Setter Property="Width" Value="120"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsInArray}" Value="True">
                                                        <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ColumnDefinition.Style>
                                    </ColumnDefinition>
                                    <ColumnDefinition Width="1"  />
                                    <ColumnDefinition>
                                        <ColumnDefinition.Style>
                                            <Style TargetType="ColumnDefinition">
                                                <Setter Property="Width" Value="3*"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsArray}" Value="True">
                                                        <Setter Property="Width" Value="7*"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ColumnDefinition.Style>
                                    </ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" ToolTip="{Binding XPath}" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="5,5,0,5"/>
                                <GridSplitter Grid.Column="1" Background="{StaticResource BorderAlt}" />
                                <ContentControl Grid.Column="2" ToolTip="{Binding Type}" ContentTemplateSelector="{StaticResource redEditorTemplates}" Content="{Binding}" />
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter TargetName="TopLine" Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</reactiveUi:ReactiveUserControl>
