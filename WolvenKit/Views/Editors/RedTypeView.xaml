<reactiveUi:ReactiveUserControl
    x:TypeArguments="shell:ChunkViewModel"
    x:Class="WolvenKit.Views.Editors.RedTypeView"
    xmlns:shell="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800">
        <Grid Background="{StaticResource ContentBackground}">
            <Grid.Resources>
            <sys:Double x:Key="RowHeight">26</sys:Double>
            <SolidColorBrush x:Key="RedTypeColor" Color="{StaticResource WolvenKitTanColor}"/>
            <DataTemplate x:Key="ForceLoadButton" DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Command="{Binding ForceLoadCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    BorderThickness="0"
                    Height="12"
                    Style="{DynamicResource ButtonCustom}"
                    Padding="0,0">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconVaadinIcons
                        Foreground="{StaticResource WolvenKitCyan}"
                        Kind="ArrowCircleDown" 
                        VerticalAlignment="Center"
                        Padding="2"/>
                        <TextBlock Text="Force Load" VerticalAlignment="Center" Margin="1,0,4,0" Foreground="{StaticResource WolvenKitCyan}" />
                    </StackPanel>
                </Button>
            </DataTemplate>
            <DataTemplate x:Key="AddHandleButton" DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Background="Transparent"
                    Command="{Binding AddHandleCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Padding="0"
                    Height="12" VerticalAlignment="Center"
                    ToolTip="Add Handle" Style="{StaticResource ButtonCustom}">
                    <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconVaadinIcons
                        Foreground="{StaticResource WolvenKitYellow}"
                        Kind="PlusCircle" 
                        VerticalAlignment="Center"
                        Padding="2"/>
                        <TextBlock Text="Create Handle" VerticalAlignment="Center" Margin="1,0,4,0" Foreground="{StaticResource WolvenKitYellow}" />
                    </StackPanel>
                </Button>
            </DataTemplate>
            <DataTemplate x:Key="AddToCompiledDataButton" DataType="{x:Type shell:ChunkViewModel}">
                <Button
                    Background="Transparent"
                    Command="{Binding AddItemToCompiledDataCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Padding="0"
                    Height="12" VerticalAlignment="Center"
                    ToolTip="Add New Chunk" Style="{StaticResource ButtonCustom}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconVaadinIcons
                        Foreground="{StaticResource WolvenKitYellow}"
                        Kind="PlusCircle" 
                        VerticalAlignment="Center"
                        Padding="2"/>
                        <TextBlock Text="Create Item In Buffer" VerticalAlignment="Center" Margin="1,0,4,0" Foreground="{StaticResource WolvenKitYellow}" />
                    </StackPanel>
                </Button>
            </DataTemplate>
            <DataTemplate x:Key="AddToArrayButton">
                <Button
                    Background="Transparent"
                    Command="{Binding AddItemToArrayCommand}"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Padding="0"
                    Height="12" VerticalAlignment="Center"
                    ToolTip="Add New Element" Style="{StaticResource ButtonCustom}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconVaadinIcons
                        Foreground="{StaticResource WolvenKitYellow}"
                        Kind="PlusCircle" 
                        VerticalAlignment="Center"
                        Padding="2"/>
                        <TextBlock Text="Create Item In Array" VerticalAlignment="Center" Margin="1,0,4,0" Foreground="{StaticResource WolvenKitYellow}" />
                    </StackPanel>
                </Button>
            </DataTemplate>
            <DataTemplate x:Key="DeleteButton">
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsInArray, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ToggleButton x:Name="DeleteButton" HorizontalAlignment="Left" IsChecked="{Binding IsDeleteReady}" 
                        Margin="0,-4,0,-2" Padding="0"
                        VerticalAlignment="Center" ToolTip="Delete Element">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonCustom}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid Height="20" Width="20" Background="Transparent">
                                                <iconPacks:PackIconVaadinIcons Kind="Trash" Foreground="{StaticResource WolvenKitRed}"
                                        VerticalAlignment="Center" HorizontalAlignment="Left" Padding="2"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsInArray}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBlock Text="Confirm?" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button x:Name="RealDeleteButton" Command="{Binding DeleteItemCommand}"
                        Margin="2,-4,0,-2" Padding="0" Height="20" Width="20"
                        VerticalAlignment="Center" ToolTip="Delete Element">
                        <Button.Style>
                            <Style  TargetType="Button" BasedOn="{StaticResource ButtonCustom}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=DeleteButton}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    <iconPacks:PackIconVaadinIcons Kind="Trash" Foreground="{StaticResource WolvenKitRed}"
                        VerticalAlignment="Center" Padding="2"/>
                    </Button>
                </StackPanel>
            </DataTemplate>
            <Style x:Key="PGNameStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                        <Setter Property="FontStyle" Value="Italic" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <DataTemplate x:Key="ItemTemplate">
                <Border x:Name="TopLine" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderAlt}" MinHeight="27">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition>
                                <ColumnDefinition.Style>
                                    <Style TargetType="ColumnDefinition">
                                        <Setter Property="Width" Value="160"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsInArray}" Value="True">
                                                <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ColumnDefinition.Style>
                            </ColumnDefinition>
                            <ColumnDefinition Width="Auto"  />
                            <ColumnDefinition Width="1"  />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Name}" ToolTip="{Binding XPath}" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="6,5,0,0" Style="{StaticResource PGNameStyle}"/>
                        <ContentPresenter ContentTemplate="{StaticResource DeleteButton}" VerticalAlignment="Top" Margin="0,6,0,0" DataContext="{Binding}" Grid.Column="1" x:Name="DeleteButtonWrapper"/>
                        <GridSplitter Grid.Column="2" Background="{StaticResource BorderAlt}" HorizontalAlignment="Stretch" />
                        <ContentControl Grid.Column="3" ToolTip="{Binding Type}" ContentTemplateSelector="{DynamicResource redEditorTemplates}" Content="{Binding}" />
                    </Grid>
                </Border>
                <!--DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter TargetName="TopLine" Property="BorderThickness" Value="0"/>
                                        </Trigger>
                                    </DataTemplate.Triggers-->
            </DataTemplate>
            <converters:MathConverter x:Key="MathConverter" />
            <converters:RedEditorTemplateSelector x:Key="redEditorTemplates">
                    <converters:RedEditorTemplateSelector.RedStringEditor>
                        <DataTemplate>
                            <editors:RedStringEditor RedString="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedStringEditor>
                    <converters:RedEditorTemplateSelector.RedUlongEditor>
                        <DataTemplate>
                            <editors:RedUlongEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedUlongEditor>
                    <converters:RedEditorTemplateSelector.RedColorEditor>
                        <DataTemplate>
                        <editors:RedColorEditor RedColor="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedColorEditor>
                    <converters:RedEditorTemplateSelector.RedCurveEditor>
                        <DataTemplate>
                        <editors:RedCurveEditor RedCurve="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedCurveEditor>
                    <converters:RedEditorTemplateSelector.RedRefEditor>
                        <DataTemplate>
                        <editors:RedRefEditor RedRef="{Binding Data, Mode=TwoWay}"/>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedRefEditor>
                    <converters:RedEditorTemplateSelector.HandleTemplateView>
                    <DataTemplate>
                        <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Margin="6,0,0,1"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.HandleTemplateView>
                <converters:RedEditorTemplateSelector.BitfieldTemplateView>
                    <DataTemplate>
                        <templates:BitfieldTemplateView RedBitfield="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.BitfieldTemplateView>
                <converters:RedEditorTemplateSelector.EnumTemplateView>
                    <DataTemplate>
                        <templates:EnumTemplateView RedEnum="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.EnumTemplateView>
                <converters:RedEditorTemplateSelector.RedBoolEditor>
                    <DataTemplate>
                        <editors:RedBoolEditor RedBool="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedBoolEditor>
                <converters:RedEditorTemplateSelector.RedVector3Editor>
                    <DataTemplate>
                        <editors:RedVector3Editor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector3Editor>
                <converters:RedEditorTemplateSelector.RedWorldPositionEditor>
                    <DataTemplate>
                        <editors:RedWorldPositionEditor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedWorldPositionEditor>
                <converters:RedEditorTemplateSelector.RedVector4Editor>
                    <DataTemplate>
                        <editors:RedVector4Editor X="{Binding Data.X, Mode=TwoWay}" Y="{Binding Data.Y, Mode=TwoWay}" Z="{Binding Data.Z, Mode=TwoWay}" W="{Binding Data.W, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedVector4Editor>
                <converters:RedEditorTemplateSelector.RedQuaternionEditor>
                    <DataTemplate>
                        <editors:RedQuaternionEditor I="{Binding Data.I, Mode=TwoWay}" J="{Binding Data.J, Mode=TwoWay}" K="{Binding Data.K, Mode=TwoWay}" R="{Binding Data.R, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedQuaternionEditor>
                <converters:RedEditorTemplateSelector.RedIntegerEditor>
                    <DataTemplate>
                        <editors:RedIntegerEditor RedInteger="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedIntegerEditor>
                <converters:RedEditorTemplateSelector.RedFixedPointEditor>
                    <DataTemplate>
                        <editors:RedFixedPointEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFixedPointEditor>
                <converters:RedEditorTemplateSelector.RedFloatEditor>
                    <DataTemplate>
                        <editors:RedFloatEditor RedNumber="{Binding Data, Mode=TwoWay}"/>
                    </DataTemplate>
                </converters:RedEditorTemplateSelector.RedFloatEditor>
                <converters:RedEditorTemplateSelector.RedTypeViewer>
                        <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Type}" VerticalAlignment="Center" Margin="6,0,4,1" Foreground="{StaticResource RedTypeColor}"/>
                            <TextBlock Text="{Binding Descriptor}" VerticalAlignment="Center" Margin="0,0,4,1" Foreground="White">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Descriptor}" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ContentPresenter ContentTemplate="{StaticResource ForceLoadButton}" />
                            <ContentPresenter ContentTemplate="{StaticResource AddToCompiledDataButton}" />
                            <ContentPresenter ContentTemplate="{StaticResource AddHandleButton}" />
                        </StackPanel>
                        </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedTypeViewer>
                    <converters:RedEditorTemplateSelector.RedArrayEditor>
                        <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource BorderAlt}" Height="{DynamicResource RowHeight}" Margin="0,1,0,-1">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Type}" VerticalAlignment="Center" Margin="6,0,4,1" Foreground="{StaticResource RedTypeColor}"/>
                                    <TextBlock Text="{Binding Descriptor}" VerticalAlignment="Center" Margin="0,0,4,1">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Descriptor}" Value="">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <ContentPresenter ContentTemplate="{StaticResource ForceLoadButton}" />
                                    <ContentPresenter ContentTemplate="{StaticResource AddToArrayButton}" />
                                    <ContentPresenter ContentTemplate="{StaticResource AddHandleButton}" />
                                </StackPanel>
                            </Border>
                            <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource ItemTemplate}" Grid.Row="1" AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </DataTemplate>
                    </converters:RedEditorTemplateSelector.RedArrayEditor>
            </converters:RedEditorTemplateSelector>
            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource WPFComboBoxStyle}">
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#252525"/>
            </Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
                <Setter Property="Margin" Value="4,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="#252525"/>
            </Style>
            <Style TargetType="{x:Type syncfusion:UpDown}" BasedOn="{StaticResource SyncfusionUpDownStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FocusedBackground" Value="Transparent" />
                <Setter Property="NegativeBackground" Value="Transparent" />
                <Setter Property="ZeroColor" Value="White" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!-- info at top -->
        <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="0,0,0,1">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid Margin="6">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Tab.File.RelativePath}" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding XPath}" VerticalAlignment="Center" FontWeight="SemiBold" Grid.Row="1"/>
                <StackPanel Orientation="Horizontal" Grid.Row="2">
                    <TextBlock Text="{Binding ResolvedType}" VerticalAlignment="Center" Foreground="{StaticResource RedTypeColor}" Margin="0,0,4,0"/>
                    <ContentPresenter ContentTemplate="{StaticResource AddToCompiledDataButton}" Content="{Binding}"/>
                    <ContentPresenter ContentTemplate="{StaticResource AddToArrayButton}" Content="{Binding}"/>
                    <ContentPresenter ContentTemplate="{StaticResource AddHandleButton}" Content="{Binding}" />
                </StackPanel>
            </Grid>
        </Border>
        <!-- main editor list -->
        <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="0" Grid.Row="1" Margin="0,-1,0,0">
            <ItemsControl ItemsSource="{Binding DisplayProperties}" ItemTemplate="{StaticResource ItemTemplate}" Grid.Column="2" AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border BorderBrush="{StaticResource BorderAlt}" BorderThickness="0,0,0,1" Height="Auto" VerticalAlignment="Top">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>
                <!--ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border x:Name="TopLine" BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderAlt}" MinHeight="{DynamicResource RowHeight}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition>
                                        <ColumnDefinition.Style>
                                            <Style TargetType="ColumnDefinition">
                                                <Setter Property="Width" Value="160"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsInArray}" Value="True">
                                                        <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ColumnDefinition.Style>
                                    </ColumnDefinition>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="1"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" ToolTip="{Binding XPath}" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" Margin="6,5,0,5" Style="{StaticResource PGNameStyle}"/>
                                <ContentPresenter ContentTemplate="{StaticResource DeleteButton}" DataContext="{Binding}" Grid.Column="1" x:Name="DeleteButtonWrapper" VerticalAlignment="Top" Margin="0,6,0,0"/>
                                <GridSplitter Grid.Column="2" Background="{StaticResource BorderAlt}" HorizontalAlignment="Stretch"  />
                                <ContentControl Grid.Column="3" ToolTip="{Binding Type}" ContentTemplateSelector="{StaticResource redEditorTemplates}" Content="{Binding}"/>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter TargetName="TopLine" Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate-->
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</reactiveUi:ReactiveUserControl>
