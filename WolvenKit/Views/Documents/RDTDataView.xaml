<reactiveUi:ReactiveUserControl
    x:TypeArguments="documents:RDTDataViewModel"
    x:Class="WolvenKit.Views.Documents.RDTDataView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:treeViewEngine="clr-namespace:Syncfusion.UI.Xaml.TreeView.Engine;assembly=Syncfusion.SfTreeView.WPF"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:shell="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:types="clr-namespace:WolvenKit.RED4.Types;assembly=WolvenKit.RED4.Types"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:archive="clr-namespace:WolvenKit.RED4.Archive.CR2W;assembly=WolvenKit.RED4.Archive"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTDataViewModel}}"
    BorderThickness="1,0,1,1"
    BorderBrush="{StaticResource BorderAlt}"
    Margin="0">
    
    <Grid>

        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>

                <!--ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                </ResourceDictionary.MergedDictionaries-->

                <Style TargetType="{x:Type syncfusion:AdvancedFilterControl}">
                    <Setter Property="CanGenerateUniqueItems" Value="False" />
                </Style>

                <!-- Start TreeView Styles & Templates -->

                <Style x:Key="PropertyValueStyle" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="null">
                            <Setter Property="Foreground" Value="{StaticResource Border}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDefault}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                
                <DataTemplate x:Key="PropertyNameTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="ExpanderHider" TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewItem}}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Width="Auto" Text="{Binding Name}"  Margin="0,0,0,2" Grid.Column="1"/>
                        <TextBlock Width="Auto" Text="{Binding Type, StringFormat=' {0}'}"  Margin="0,0,0,2" Grid.Column="2"
                            Style="{StaticResource ExpanderHider}" Foreground="{StaticResource Border}" />
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="PropertyValueTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type iconPacks:PackIconCodicons}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <iconPacks:PackIconCodicons Kind="{Binding Extension}" Height="15"
                            Width="15" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,6,0" />
                        <TextBlock Name="PropertyType" Text="{Binding Type}" Margin="0,0,4,2" Grid.Column="1" Foreground="{StaticResource WolvenKitTan}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource PropertyValueStyle}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Name="PropertyDescriptor" Text="{Binding Descriptor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource PropertyValueStyle}" Margin="0,0,4,2" Grid.Column="2" TextTrimming="CharacterEllipsis"/>
                        <TextBlock Name="PropertyValue" Text="{Binding Value}" Style="{StaticResource PropertyValueStyle}" Margin="0,0,0,2" Grid.Column="2" TextTrimming="CharacterEllipsis"/>
                    </Grid>
                </DataTemplate>
                
                <Style x:Key="ArrayNameColumnWidth" TargetType="ColumnDefinition">
                    <Setter Property="Width" Value="218" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Level}" Value="1">
                            <Setter Property="Width" Value="200"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="2">
                            <Setter Property="Width" Value="180"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="3">
                            <Setter Property="Width" Value="160"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="4">
                            <Setter Property="Width" Value="140"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="5">
                            <Setter Property="Width" Value="120"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInArray}" Value="True">
                            <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                            <Setter Property="Width" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <ContextMenu x:Key="TreeViewContextMenu" DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Open in New Tab"
                        IsCheckable="False"
                        Command="{Binding Path=PlacementTarget.Tag.OpenChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="References" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Copy Value to Clipboard"
                        IsCheckable="False"
                        Command="ApplicationCommands.Copy"
                        CommandTarget="{Binding}"
                        CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="Copy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Export to JSON"
                        IsCheckable="False"
                        Command="{Binding Path=PlacementTarget.Tag.ExportChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="Json" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>

                <converters:TreeViewItemTemplateSelector x:Name="itemTemplateSelector" x:Key="itemTemplateSelector">
                    <converters:TreeViewItemTemplateSelector.PropertyTemplate>
                        <DataTemplate DataType="{x:Type shell:ChunkViewModel}">
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.CommandBindings>
                                    <CommandBinding Command="ApplicationCommands.Copy" Executed="Copy_Executed" CanExecute="Copy_CanExecute"/>
                                </Grid.CommandBindings>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="2" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.PropertyTemplate>
                    <converters:TreeViewItemTemplateSelector.ArrayTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="2" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.ArrayTemplate>
                    <converters:TreeViewItemTemplateSelector.HandleTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.HandleTemplate>
                    <converters:TreeViewItemTemplateSelector.RefTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" MinWidth="20"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <!--iconPacks:PackIconCodicons Kind="References" Height="14" Grid.Column="1"
                                    Width="14" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,6,0" />
                                <TextBlock Text="{Binding Value}" Grid.Column="2" /-->
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                                <Button Background="Transparent" Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource ButtonCustom}" Command="{Binding OpenRefCommand}" ToolTip="Open in new tab">
                                    <iconPacks:PackIconVaadinIcons Kind="ArrowCircleUp" RotationAngle="45"
                                                                   Foreground="{StaticResource WolvenKitCyan}"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.RefTemplate>
                </converters:TreeViewItemTemplateSelector>

            </ResourceDictionary>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <syncfusion:SfTreeView
            Background="{StaticResource ContentBackground}"
            x:Name="TreeView"
            Grid.Column="0"
            ChildPropertyName="Properties"
            ShowLines="True"
            ItemTemplateSelector="{StaticResource itemTemplateSelector}"
            SelectionMode="Single"
            AllowEditing="False"
            Visibility="Visible"
            AllowDragging="True"
            BorderThickness="0"
            Margin="-1"
            ItemDragStarting="SfTreeView_ItemDragStarting"
            ItemDragOver="SfTreeView_ItemDragOver"
            ItemDropping="SfTreeView_ItemDropping"
            ItemDropped="SfTreeView_ItemDropped">
            <syncfusion:SfTreeView.HierarchyPropertyDescriptors>
                <treeViewEngine:HierarchyPropertyDescriptor IsSelectedPropertyName="IsSelected" IsExpandedPropertyName="IsExpanded" ChildPropertyName="Properties" TargetType="{x:Type shell:ChunkViewModel}" />
            </syncfusion:SfTreeView.HierarchyPropertyDescriptors>
        </syncfusion:SfTreeView>


        <!-- Grid Splitter -->
        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <editors:RedTypeView x:Name="CustomPG" ViewModel="{Binding}" DataContext="{Binding SelectedChunk, IsAsync=True}" Grid.Column="2"/>

    </Grid>
    
</reactiveUi:ReactiveUserControl>


