<reactiveUi:ReactiveUserControl
    x:TypeArguments="documents:W2rcFileViewModel"
    x:Class="WolvenKit.Views.Documents.W2rcMainFileView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:treeViewEngine="clr-namespace:Syncfusion.UI.Xaml.TreeView.Engine;assembly=Syncfusion.SfTreeView.WPF"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:shell="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:types="clr-namespace:WolvenKit.RED4.Types;assembly=WolvenKit.RED4.Types"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:archive="clr-namespace:WolvenKit.RED4.Archive.CR2W;assembly=WolvenKit.RED4.Archive"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type={x:Type documents:W2rcFileViewModel}}"  BorderThickness="1,0,1,1"
    BorderBrush="{StaticResource BorderAlt}"
    Margin="0">
    
    <Grid>

        <Grid.Resources>
            <ResourceDictionary>
                <!--<ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>-->

                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                </ResourceDictionary.MergedDictionaries>

                <Style TargetType="{x:Type syncfusion:AdvancedFilterControl}">
                    <Setter Property="CanGenerateUniqueItems" Value="False" />
                </Style>

                <!-- Start TreeView Styles & Templates -->

                <Style x:Key="DeleteButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonCustom}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid Height="20" Width="20" Background="Transparent">
                                    <iconPacks:PackIconVaadinIcons Kind="Trash" Foreground="{StaticResource WolvenKitRed}"
                                        VerticalAlignment="Center" HorizontalAlignment="Left" Padding="2"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInArray}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBlock Text="Confirm?" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="RealDeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonCustom}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=DeleteButton}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="PropertyValueStyle" TargetType="TextBlock">
                    <Setter Property="Text" Value="{Binding Value}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="null">
                            <Setter Property="Foreground" Value="{StaticResource Border}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                            <Setter Property="Text" Value="{Binding Value}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInArray}" Value="True">
                            <Setter Property="Text" Value="{Binding Value}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHandled}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Border}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                
                <DataTemplate x:Key="PropertyNameTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="ExpanderHider" TargetType="FrameworkElement">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewItem}}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Width="Auto" Text="{Binding Name}"  Margin="0,0,0,2" Grid.Column="1"/>
                        <TextBlock Width="Auto" Text="{Binding Type, StringFormat=' {0}'}"  Margin="0,0,0,2" Grid.Column="2"
                            Style="{StaticResource ExpanderHider}" Foreground="{StaticResource Border}" />
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="PropertyValueTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type iconPacks:PackIconCodicons}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHandled}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource Border}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <iconPacks:PackIconCodicons Kind="{Binding Extension}" Height="15"
                            Width="15" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,6,0" />
                        <TextBlock Name="PropertyValue" Style="{StaticResource PropertyValueStyle}" Margin="0,0,0,2" Grid.Column="1"/>
                        <ToggleButton x:Name="DeleteButton" HorizontalAlignment="Left" IsChecked="{Binding IsDeleteReady}"
                                    Style="{StaticResource DeleteButtonStyle}" Grid.Column="2"
                                    Margin="5,-4,0,-2" Padding="0"
                                    VerticalAlignment="Center" ToolTip="Delete Element"/>
                        <Button x:Name="RealDeleteButton" Command="{Binding DeleteItemCommand}"
                                    Style="{StaticResource RealDeleteButtonStyle}" Grid.Column="3"
                                    Margin="2,-4,0,-2" Padding="0" Height="20" Width="20"
                                    VerticalAlignment="Center" ToolTip="Delete Element">
                            <iconPacks:PackIconVaadinIcons Kind="Trash" Foreground="{StaticResource WolvenKitRed}"
                                        VerticalAlignment="Center" Padding="2"/>
                        </Button>
                    </Grid>
                </DataTemplate>
                
                <Style x:Key="ArrayNameColumnWidth" TargetType="ColumnDefinition">
                    <Setter Property="Width" Value="218" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Level}" Value="1">
                            <Setter Property="Width" Value="200"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="2">
                            <Setter Property="Width" Value="180"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="3">
                            <Setter Property="Width" Value="160"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="4">
                            <Setter Property="Width" Value="140"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="5">
                            <Setter Property="Width" Value="120"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInArray}" Value="True">
                            <Setter Property="Width" Value="{Binding ArrayIndexWidth}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                            <Setter Property="Width" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <ContextMenu x:Key="TreeViewContextMenu" DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Open in New Tab"
                        IsCheckable="False"
                        Command="{Binding Path=PlacementTarget.Tag.OpenChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="References" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Copy Value to Clipboard"
                        IsCheckable="False"
                        Command="ApplicationCommands.Copy"
                        CommandTarget="{Binding}"
                        CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="Copy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Style="{StaticResource SyncfusionMenuItemStyle}"
                        Header="Export to JSON"
                        IsCheckable="False"
                        Command="{Binding Path=PlacementTarget.Tag.ExportChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Padding="0,0,0,0"
                                Kind="Json" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
                
                <converters:TreeViewItemTemplateSelector x:Name="itemTemplateSelector" x:Key="itemTemplateSelector">
                    <converters:TreeViewItemTemplateSelector.PropertyTemplate>
                        <DataTemplate DataType="{x:Type shell:ChunkViewModel}">
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.CommandBindings>
                                    <CommandBinding Command="ApplicationCommands.Copy" Executed="Copy_Executed" CanExecute="Copy_CanExecute"/>
                                </Grid.CommandBindings>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.PropertyTemplate>
                    <converters:TreeViewItemTemplateSelector.ArrayTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="2" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                                <Button
                                    Panel.ZIndex="5" Background="Transparent"
                                    Command="{Binding AddItemToArrayCommand}"
                                    Grid.Column="1" Margin="-25,0,0,0" Padding="0"
                                    Height="20" Width="20" VerticalAlignment="Center"
                                    ToolTip="Add New Element" Style="{StaticResource ButtonCustom}">
                                    <iconPacks:PackIconVaadinIcons Kind="PlusCircle" 
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.ArrayTemplate>
                    <converters:TreeViewItemTemplateSelector.HandleTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                                <Button Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource ButtonCustom}" Command="{Binding NewHandleCommand}">
                                    <iconPacks:PackIconVaadinIcons Kind="PlusCircle"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.HandleTemplate>
                    <converters:TreeViewItemTemplateSelector.RefTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}" Tag="{Binding}" Background="Transparent" ContextMenu="{StaticResource TreeViewContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <!--ColumnDefinition Width="20" /-->
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <!--iconPacks:PackIconCodicons Kind="References" Height="14" Grid.Column="1"
                                    Width="14" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,6,0" />
                                <TextBlock Text="{Binding Value}" Grid.Column="2" /-->
                                <ContentPresenter Grid.Column="1" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                                <Button Grid.Column="3" Margin="5,0,0,0" Style="{StaticResource ButtonCustom}" Command="{Binding OpenRefCommand}">
                                    <iconPacks:PackIconVaadinIcons Kind="ArrowCircleRight"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.RefTemplate>
                </converters:TreeViewItemTemplateSelector>

                <!-- Editors -->

                <!--Style x:Key="EditorSelector" TargetType="ContentControl">
                    <Setter Property="Content">
                        <Setter.Value>
                            <TextBox Text="{Binding Text}" />
                        </Setter.Value>
                    </Setter>
                </Style>

                <converters:TreeViewEditorSelector x:Name="editTemplateSelector" x:Key="editTemplateSelector">
                    <converters:TreeViewEditorSelector.PropertyEditTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" MinWidth="400"/>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentControl  Grid.Column="1" Style="{StaticResource EditorSelector}" />
                                <Button
                                    Style="{StaticResource ButtonCustom}" Grid.Column="2"
                                    Margin="5,0,0,0" Padding="0" Height="20" Width="20"
                                    VerticalAlignment="Center" ToolTip="Save Property">
                                    <iconPacks:PackIconCodicons Kind="Save"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                                <Button
                                    Style="{StaticResource ButtonCustom}" Grid.Column="3"
                                    Margin="0,0,0,0" Padding="0" Height="20" Width="20"
                                    VerticalAlignment="Center" ToolTip="Reset Property">
                                    <iconPacks:PackIconCodicons Kind="Refresh"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                                <Button
                                    Style="{StaticResource DeleteButton}" Grid.Column="4"
                                    Margin="5,0,0,0" Padding="0" Height="20" Width="20"
                                    VerticalAlignment="Center" ToolTip="Delete Property">
                                    <iconPacks:PackIconVaadinIcons Kind="Trash" Foreground="IndianRed"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewEditorSelector.PropertyEditTemplate>
                    <converters:TreeViewEditorSelector.ArrayTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <ContentPresenter Grid.Column="2" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyValueTemplate}"  />
                                <Button 
                                    Grid.Column="1" Margin="-25,0,0,0" Padding="0"
                                    Height="20" Width="20" VerticalAlignment="Center"
                                    ToolTip="Add Element to Array" Style="{StaticResource ButtonCustom}">
                                    <iconPacks:PackIconVaadinIcons Kind="PlusCircle"
                                        VerticalAlignment="Center" Padding="2"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewEditorSelector.ArrayTemplate>
                    <converters:TreeViewEditorSelector.HandleEditTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Type}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                   ContentTemplate="{StaticResource PropertyNameTemplate}"/>
                                <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Grid.Column="1" />
                                <Button Grid.Column="2" Margin="5,0,0,0">
                                    <TextBlock Text="Jump to"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewEditorSelector.HandleEditTemplate>
                </converters:TreeViewEditorSelector-->
                
            </ResourceDictionary>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Additional Navigation -->
        <!--Grid Grid.Column="0" >
            <ListView x:Name="ChunksTreeView"
                          Margin="0,3,0,0"
                          Padding="0"
                          BorderThickness="0"
                          Background="Transparent"
                          hc:VisualElement.HighlightBackground="{StaticResource WolvenKitSammyRedShaded}"
                          hc:VisualElement.HighlightBrush="{StaticResource WolvenKitSammyRedShaded}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                        <Setter Property="Height" Value="20" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0,0,0,1" />
                        <Setter Property="BorderBrush" Value="#373737" />
                        <Setter Property="Margin" Value="0,0,0,-1" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderThickness" Value="0,1,0,1" />
                                <Setter Property="Margin" Value="0,-1,0,0"/>
                                <Setter Property="Padding" Value="4,1,4,-1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type shell:ChunkViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Name}"/>
                            <Button x:Name="DeleteButton" Grid.Column="1" Visibility="Collapsed" Style="{StaticResource ButtonDefault}" ToolTip="Add Chunk" Height="16" Width="16" Padding="0">
                                <Button.Content>
                                    <iconPacks:PackIconMaterialDesign Kind="Delete"
                                Grid.Column="0" Height="8" Width="8" VerticalAlignment="Center"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </Grid-->

        <syncfusion:SfTreeView
            Background="{StaticResource ContentBackground}"
            x:Name="TreeView"
            Grid.Column="0"
            ChildPropertyName="Properties"
            ShowLines="True"
            ItemTemplateSelector="{StaticResource itemTemplateSelector}"
            SelectionMode="Single"
            AllowEditing="False"
            Visibility="Visible"
            AllowDragging="True"
            BorderThickness="0"
            Margin="-1"
            ItemDragStarting="SfTreeView_ItemDragStarting"
            ItemDragOver="SfTreeView_ItemDragOver"
            ItemDropping="SfTreeView_ItemDropping"
            ItemDropped="SfTreeView_ItemDropped">
            <syncfusion:SfTreeView.HierarchyPropertyDescriptors>
                <treeViewEngine:HierarchyPropertyDescriptor IsSelectedPropertyName="IsSelected" IsExpandedPropertyName="IsExpanded" ChildPropertyName="Properties" TargetType="{x:Type shell:ChunkViewModel}" />
            </syncfusion:SfTreeView.HierarchyPropertyDescriptors>
        </syncfusion:SfTreeView>


        <!-- Grid Splitter -->
        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <!-- CR2W TreeGrid -->

        <syncfusion:PropertyGrid
                x:Name="PropertyGrid" Grid.Column="2"
                PropertyExpandMode="NestedMode"
                AutoGeneratingPropertyGridItem="PropertyGrid_AutoGeneratingPropertyGridItem"
                CollectionEditorOpening ="PropertyGrid_CollectionEditorOpening"
                PropertyNameColumnDefinition="200"
                ValueChanged="PropertyGrid_ValueChanged"
                ButtonPanelVisibility="Collapsed"
                SelectedObjectChanged="PropertyGrid_SelectedObjectChanged"
                BorderThickness="0" />

        <!--syncfusion:SfImageEditor
            Image="{Binding ImageStream}"
            Background="{StaticResource ContentBackground}"
            x:Name="ImagePreview"
            Grid.ColumnSpan="3"
            BorderThickness="0"
            Margin="0,0.5,0,0"
            Grid.Column="0"
            EnablePanning="True"
            RenderTransformOrigin="0.5,0.5"
            IsManipulationEnabled="False"
            Visibility="{Binding IsImagePreviewVisible, Converter={StaticResource boolToVisibilityConverter}}">
            <syncfusion:SfImageEditor.ToolbarSettings>
                <syncfusion:ToolbarSettings IsToolbarVisiblity="False" />
            </syncfusion:SfImageEditor.ToolbarSettings>
            <syncfusion:SfImageEditor.RenderTransform>
                <ScaleTransform ScaleY="-1"/>
            </syncfusion:SfImageEditor.RenderTransform>
            <syncfusion:SfImageEditor.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Reset Zoom" Command="{x:Static syncfusion:ImageEditorCommands.ResetZoom}" />
                </ContextMenu>
            </syncfusion:SfImageEditor.ContextMenu>
        </syncfusion:SfImageEditor-->

        <Border
            BorderThickness="1"
            Padding="0"
            Grid.Column="0"
            ClipToBounds="True"
            Grid.ColumnSpan="3"
            Background="{StaticResource ContentBackground}"
            Visibility="{Binding IsImagePreviewVisible, Converter={StaticResource boolToVisibilityConverter}}">
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Real Image Size" Click="SetRealPixelZoom" />
                    <MenuItem Header="Reset Zoom/Pan" Click="ResetZoomPan" />
                </ContextMenu>
            </Border.ContextMenu>
            <Border
                BorderThickness="1"
                x:Name="ImagePreviewCanvas"
                ClipToBounds="True"
                Background="{StaticResource ContentBackground}">
                <Canvas x:Name="ImagePreview"
                        RenderTransformOrigin="0.5,0.5">
                    <Image
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        ClipToBounds="False"
                        Source="{Binding Image}"
                        IsHitTestVisible="False"
                        RenderTransformOrigin="0.5,0.5"
                        Opacity="1">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleY="-1"/>
                        </Image.RenderTransform>
                    </Image>
                    <ItemsControl ItemsSource="{Binding OverlayItems}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                                <Setter Property="Canvas.Right" Value="{Binding Right}"/>
                                <Setter Property="Canvas.Bottom" Value="{Binding Bottom}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="{StaticResource WolvenKitCyan}">
                                    <TextBlock Text="{Binding Name}" />
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Canvas>
            </Border>
        </Border>

    </Grid>
    
</reactiveUi:ReactiveUserControl>


