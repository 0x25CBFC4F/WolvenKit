<reactiveUi:ReactiveUserControl
    x:TypeArguments="documents:W2rcFileViewModel"
    x:Class="WolvenKit.Views.Documents.W2rcMainFileView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:shell="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type={x:Type documents:W2rcFileViewModel}}">
    
    <Grid>

        <Grid.Resources>
            <ResourceDictionary>
                <!--<ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>-->

                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                </ResourceDictionary.MergedDictionaries>

                

                <Style TargetType="{x:Type syncfusion:AdvancedFilterControl}">
                    <Setter Property="CanGenerateUniqueItems" Value="False" />
                </Style>

            </ResourceDictionary>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Additional Navigation -->
        <Grid Grid.Column="0" >

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Column="0" HorizontalAlignment="Stretch">

                <Grid.Resources>
                    <Style x:Key="ChunkImportRadioButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseStyle}" >
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Name="BorderRoot" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                        <ContentPresenter Name="contentPresenter" Width="Auto" HorizontalAlignment="Stretch" RecognizesAccessKey="True" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="BorderRoot" Property="BorderThickness" Value="0" />
                                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="BorderRoot" Property="Background" Value="#222222" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsChecked" Value="true" />
                                                <Condition Property="IsMouseOver" Value="true" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <RadioButton Grid.Column="0" GroupName="ChunkImportSelect" Height="24" Width="Auto" Margin="0.5,0,0,0" IsChecked="True"
                        Click="ChunksButton_OnClick" HorizontalAlignment="Stretch" Style="{StaticResource ChunkImportRadioButton}">
                    <RadioButton.Content>
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconVaadinIcons Kind="Cubes"
                                Grid.Column="1" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock
                                x:Name="ChunksLabel"
                                Grid.Column="2"
                                Foreground="White"
                                VerticalAlignment="Center"
                                Text="Chunks"/>
                        </Grid>
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton Grid.Column="1" GroupName="ChunkImportSelect" x:Name="ImportsButton"  Height="24" Width="Auto" Margin="0.5,0,1.5,0"
                             Click="ImportsButton_OnClick" HorizontalAlignment="Stretch" Style="{StaticResource ChunkImportRadioButton}">
                    <RadioButton.Content>
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="17"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterialDesign Kind="ImportExport" 
                                Grid.Column="1" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock
                                x:Name="ImportsLabel"
                                Grid.Column="2"
                                Foreground="White"
                                VerticalAlignment="Center"
                                Text="Imports"/>
                        </Grid>
                    </RadioButton.Content>
                </RadioButton>
            </Grid>

            <Grid Grid.Row="1"  x:Name="ChunksView">
                <ListView x:Name="ChunksTreeView"
                          Margin="0,2,1.5,0"
                          Padding="0"
                          Style="{DynamicResource ListBoxBaseStyle}"
                          ItemsSource="{Binding Path=Chunks}"
                          SelectedItem="{Binding Path=SelectedChunk}"
                          BorderThickness="0">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                            <Setter Property="Height" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type shell:ChunkViewModel}">
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <Grid Grid.Row="1" x:Name="ImportsView" Visibility="Collapsed">
                <ListView x:Name="ImportsListView" Margin="0,2,2,0" Style="{StaticResource ListBoxBaseStyle}" BorderThickness="0">

                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding DepotPathStr}" Header="Name" />
                        </GridView>
                    </ListView.View>

                    <hc:Interaction.Triggers>
                        <hc:EventTrigger EventName="MouseDoubleClick">
                            <hc:EventToCommand Command="{Binding OpenImportCommand}" CommandParameter="{Binding SelectedImport}" />
                        </hc:EventTrigger>
                    </hc:Interaction.Triggers>
                </ListView>

            </Grid>


        </Grid>

        <!-- Grid Splitter -->
        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <!-- CR2W TreeGrid -->
        <Grid Grid.Column="2">

            <Grid.Resources>

                <!--<DataTemplate x:Key="CommmonTemplate">
                    <TextBlock Padding="5" Text="{Binding Value}" Foreground="Gray" syncfusion:FocusManagerHelper.FocusedElement="True"/>
                </DataTemplate>-->

                <!--<DataTemplate x:Key="StringTemplateView">
                    <TextBox syncfusion:FocusManagerHelper.FocusedElement="True"
                                 Height="22"
                                 Margin="0"
                                 Padding="3,3,0,0"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 Style="{DynamicResource MahApps.Styles.TextBox.DataGrid.Editing}"
                                 Text="{Binding Property.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <hc:Interaction.Triggers>
                            <hc:EventTrigger EventName="PreviewTextInput">
                                <hc:InvokeCommandAction Command="{Binding PreviewTextInputCommand}" />
                            </hc:EventTrigger>
                        </hc:Interaction.Triggers>
                    </TextBox>
                </DataTemplate>-->

                <!--<DataTemplate x:Key="ColorTemplateView">

                    <syncfusion:ColorPickerPalette syncfusion:FocusManagerHelper.FocusedElement="True"
                                                       GenerateThemeVariants="False"
                                                       Padding="3,-4,0,0"
                                                       Color="{Binding DisplayColor}"
                                                       SelectedCommand="{Binding SelectedColorCommand}"
                                                       d:DataContext="{d:DesignInstance shell:RedColorViewModel}"
                                                       />
                </DataTemplate>-->

                <!--<DataTemplate x:Key="RefTemplateView">
                    <TextBox    syncfusion:FocusManagerHelper.FocusedElement="True"
                                    Height="22"
                                    Margin="0"
                                    Padding="3,3,0,0"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Style="{DynamicResource MahApps.Styles.TextBox.DataGrid.Editing}"
                                    Text="{Binding Property.DepotPath}">
                        <hc:Interaction.Triggers>
                            <hc:EventTrigger EventName="PreviewTextInput">
                                <hc:InvokeCommandAction Command="{Binding PreviewTextInputCommand}" />
                            </hc:EventTrigger>
                        </hc:Interaction.Triggers>
                    </TextBox>
                </DataTemplate>-->

                <!--<DataTemplate x:Key="RedboolTemplate">
                    <CheckBox syncfusion:FocusManagerHelper.FocusedElement="True"
                                  Margin="3,0,0,0"
                                  Padding="5"
                                  HorizontalAlignment="Left"
                                  IsChecked="{Binding Property.Value}"
                                  
                        >
                        <hc:Interaction.Triggers>
                            <hc:EventTrigger EventName="Checked">
                                <hc:InvokeCommandAction Command="{Binding PreviewTextInputCommand}" />
                            </hc:EventTrigger>
                            <hc:EventTrigger EventName="Unchecked">
                                <hc:InvokeCommandAction Command="{Binding PreviewTextInputCommand}" />
                            </hc:EventTrigger>
                        </hc:Interaction.Triggers>
                    </CheckBox>
                </DataTemplate>-->

                <!--<DataTemplate x:Key="EnumTemplate">
                    <templates:EnumTemplateView
                            syncfusion:FocusManagerHelper.FocusedElement="True"
                            RedEnum="{Binding Property}"
                            d:DataContext="{d:DesignInstance shell:ChunkPropertyViewModel }" />
                </DataTemplate>-->

                <!--<DataTemplate x:Key="HandleTemplate">
                    <templates:HandleTemplateView
                            syncfusion:FocusManagerHelper.FocusedElement="True"
                            RedChunkPtr="{Binding Property}"
                          d:DataContext="{d:DesignInstance shell:ChunkPropertyViewModel }"
                          GoToChunkRequested="HandleTemplateView_OnGoToChunkRequested"
                          />
                </DataTemplate>-->

                <!--<DataTemplate x:Key="SingleChannelCurveTemplate">
                    <Button x:Name="CurveEditorButton" Content="Open Curve Editor"
                                syncfusion:FocusManagerHelper.FocusedElement="True"
                                d:DataContext="{d:DesignInstance shell:ChunkPropertyViewModel }"
                                Click="CurveEditorButton_OnClick" Tag="{Binding Property}" />
                </DataTemplate>-->

                <!--<templates:EditableVariableDataTemplateSelector
                                    x:Key="DataTemplateSelector"
                                    CommmonTemplate="{StaticResource CommmonTemplate}"

                                    EnumTemplate="{StaticResource EnumTemplate}"

                                    HandleTemplateView="{StaticResource HandleTemplate}"

                                    RedboolTemplate="{StaticResource RedboolTemplate}"

                                    RefTemplateView="{StaticResource RefTemplateView}"

                                    NumericTemplate="{StaticResource StringTemplateView}"

                                    StringTemplateView="{StaticResource StringTemplateView}"

                                    ColorTemplateView="{StaticResource ColorTemplateView}"

                                    SingleChannelCurveTemplate="{StaticResource SingleChannelCurveTemplate}"
                                    />-->

                <!--<converters:CellStyleConverter x:Key="converter" />-->

            </Grid.Resources>

              
            
            <!--<syncfusion:SfTreeGrid x:Name="MainTreeGrid"
                                    AllowFiltering="True"
                                    AllowResizingColumns="True"
                                    
                                    AutoGenerateColumns="False"
                                    
                                    ColumnSizer="Star"
                                    
                                    Style="{DynamicResource SyncfusionSfTreeGridStyle}" >

                <syncfusion:SfTreeGrid.Columns>

                    <syncfusion:TreeGridTextColumn MappingName="Name"
                                        AllowEditing="False"
                                        ColumnSizer="SizeToCells"
                                        HeaderText="Name"
                                        >
                        <syncfusion:TreeGridTextColumn.CellStyle>
                            <Style TargetType="syncfusion:TreeGridCell">
                                <Setter Property="Background" Value="{Binding Converter={StaticResource converter}}"/>
                            </Style>
                        </syncfusion:TreeGridTextColumn.CellStyle>
                    </syncfusion:TreeGridTextColumn>

                    <syncfusion:TreeGridTemplateColumn MappingName="Property"
                                                       AllowFocus="True"
                                                        AllowEditing="True"
                                                        AllowSorting="False"
                                                        CellTemplateSelector="{StaticResource DataTemplateSelector}"
                                                        ColumnSizer="FillColumn"
                                                        HeaderText="Value"
                                                        />

                    <syncfusion:TreeGridTextColumn MappingName="Type"
                                        AllowEditing="False"
                                        ColumnSizer="SizeToCells"
                                        HeaderText="Type"
                                         />

                    <syncfusion:TreeGridCheckBoxColumn MappingName="IsSerialized"
                                        AllowEditing="true"
                                        HeaderText="Serialized"
                                        ColumnSizer="SizeToHeader"

                                        />

                </syncfusion:SfTreeGrid.Columns>

            </syncfusion:SfTreeGrid>-->

            <syncfusion:PropertyGrid
                x:Name="PropertyGrid" Grid.Column="1"
                PropertyExpandMode="NestedMode"
                AutoGeneratingPropertyGridItem="PropertyGrid_AutoGeneratingPropertyGridItem"
                CollectionEditorOpening ="PropertyGrid_CollectionEditorOpening"
                PropertyNameColumnDefinition="200"
                ButtonPanelVisibility="Collapsed"
                BorderThickness="0" />

        </Grid>

    </Grid>
    
</reactiveUi:ReactiveUserControl>
